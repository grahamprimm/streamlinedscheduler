<div id="adminView">
    <p id="welcome">Welcome {{firstName}} {{lastName}}, the time is now: {{currentTime}} {{timezone}}. You get super secret admin access since you are an admin. Remember, with great power comes great responsibility!!</p>
    <a id="scheduleLink" href="/schedule">User Page</a>
    <a id="logoutLink" href="/logout">Logout</a>
</div>

<div id="userSchedules">
  {{#each users}}
  <div class="user-schedule">
    <button class="collapsible">{{this.firstName}} {{this.lastName}}'s Schedule</button>
    <div class="content">
      <p>Email: {{this.email}}</p>
      <p>Timezone: {{this.timezone}}</p>
      <div id="calendar-{{@index}}" class="fc"></div> <!-- Add class "fc" for easier selection -->
    </div>
  </div>
  {{/each}}
</div>


<script src="/fullcalendar/index.global.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  var coll = document.getElementsByClassName("collapsible");

  var allUsersEvents = [];
  {{#each users}}
  var userEvents = {{{json this.allEvents}}};
  allUsersEvents.push(userEvents);
  {{/each}}

  for (let i = 0; i < coll.length; i++) {
    coll[i].addEventListener("click", function() {
      this.classList.toggle("active");
      var content = this.nextElementSibling;

      if (content.classList.contains("expanded")) {
        content.classList.remove("expanded");
        content.style.display = "none";
      } else {
        content.classList.add("expanded");
        content.style.display = "block";

        if (!this.dataset.initialized) {
          var calendarEl = content.querySelector('.fc');
          if (calendarEl) {
            initializeCalendar(calendarEl, i);
            this.dataset.initialized = true;
          }
        }
      }
    });
  }

  function initializeCalendar(calendarEl, index) {
    var events = allUsersEvents[index] || [];

    console.log("Initializing calendar with events:", events);  // Debugging output

    var calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'listWeek',
      height: 'auto',
      events: events,
      eventContent: function(info) {
        buttons = '<button onclick="window.location.href=\'/edit/' + info.event.extendedProps.eventId + '\'">Edit</button>' +
                    '<button onclick="if(confirm(\'Are you sure you want to delete this event from the database?\')) { ' +
                    'fetch(\'/delete/' + info.event.extendedProps.eventId + '\', { ' +
                    'method: \'POST\', ' +
                    'headers: { \'Content-Type\': \'application/json\' }, ' +
                    'body: JSON.stringify({ userId: \'' + info.event.extendedProps.createdBy + '\' }) })' +
                    '.then(() => location.reload()); }">Delete from DB</button>'
    return {
      html: 'Title : ' + info.event.title + '<br>Description : ' + info.event.extendedProps.description + 
            '<br>Location : ' + info.event.extendedProps.location + 
            '<br>Reminder : ' + info.event.extendedProps.reminder + ' minutes prior' + buttons
    };
  }
    });
    calendar.render();
  }
});
</script>


